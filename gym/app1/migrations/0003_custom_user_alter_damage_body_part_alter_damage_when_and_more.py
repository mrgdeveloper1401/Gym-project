# Generated by Django 4.2.7 on 2023-12-19 06:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("app1", "0002_rename_damages_damage_rename_work_times_work_time"),
    ]

    operations = [
        migrations.CreateModel(
            name="custom_user",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("is_gymManager", models.BooleanField(default=False)),
                ("is_coach", models.BooleanField(default=False)),
                ("is_crew", models.BooleanField(default=False)),
                ("is_bodybuilder", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[("objects", django.contrib.auth.models.UserManager()),],
        ),
        migrations.AlterField(
            model_name="damage",
            name="body_part",
            field=models.CharField(max_length=20),
        ),
        migrations.AlterField(
            model_name="damage",
            name="when",
            field=models.CharField(
                choices=[("RM", " ماه های اخیر"), ("E", "قبلتر")],
                default="E",
                max_length=10,
            ),
        ),
        migrations.CreateModel(
            name="Gym",
            fields=[
                (
                    "gymManager",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("gym_name", models.CharField(max_length=20, unique=True)),
                ("manager_cv", models.TextField()),
                ("facilities", models.TextField()),
                ("capacity", models.PositiveSmallIntegerField()),
                ("numberofmachines", models.IntegerField()),
                ("foundationdate", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="bodybuilder",
            fields=[
                (
                    "bodybuilder",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("firstname", models.CharField(max_length=15)),
                ("lastname", models.CharField(max_length=15)),
                (
                    "gender",
                    models.CharField(
                        choices=[("FM", "Female"), ("ML", "Male")],
                        default="FM",
                        max_length=2,
                    ),
                ),
                ("height", models.PositiveSmallIntegerField()),
                ("weight", models.PositiveSmallIntegerField()),
                ("nationalcode", models.PositiveSmallIntegerField(unique=True)),
                ("email", models.EmailField(max_length=254)),
                ("phonenumber", models.PositiveSmallIntegerField()),
                ("aim", models.TextField()),
                ("illness", models.TextField()),
                ("birthdate", models.DateField()),
                (
                    "Damage",
                    models.ManyToManyField(
                        null=True, related_name="who_damaged", to="app1.damage"
                    ),
                ),
            ],
        ),
    ]
